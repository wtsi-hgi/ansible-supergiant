---

- name: validate mandatory variables
  no_log: true
  assert:
    that: item | mandatory
  with_items:
    - "{{ supergiant_admin_user_username }}"
    - "{{ supergiant_admin_user_password }}"

- name: install apt pre-requisites
  become: yes
  apt:
    name: ca-certificates
    state: present
    update_cache: yes
    cache_valid_time: "{{ supergiant_cache_valid_time }}"

- name: create directories used in install locations
  become: yes
  file:
    path: "{{ item | dirname }}"
    state: directory
  with_items:
    - "{{ supergiant_server_install_location }}"
    - "{{ supergiant_server_config_location }}"
    - "{{ supergiant_server_database_location }}"
    - "{{ supergiant_server_log_location }}"
    - "{{ supergiant_server_version_location }}"

- name: checksum Supergiant
  stat:
    path: "{{ supergiant_server_install_location }}"
    checksum_algorithm: "{{ supergiant_server_release_checksum.split(':')[0] }}"
    get_mime: no
    get_attributes: no
  register: supergiant_checksum

- name: install Supergiant from downloaded release
  become: yes
  get_url:
    url: "{{ supergiant_server_release_location }}"
    dest: "{{ supergiant_server_install_location }}"
    mode: 0770
    checksum: "{{ supergiant_server_release_checksum }}"
  notify: restart-supergiant
  when: not supergiant_checksum.stat.exists or supergiant_checksum.stat.checksum == supergiant_server_release_checksum.split(':')[1]

- name: create server configuration file
  become: yes
  template:
    src: config.json.j2
    dest: "{{ supergiant_server_config_location }}"
    mode: 0644
  notify: restart-supergiant

- name: create systemd configuration
  become: yes
  template:
    src: supergiant.service.j2
    dest: /etc/systemd/system/supergiant.service
    mode: 0751
  notify: restart-supergiant
  when: supergiant_configure_systemctl

- name: enable Supergiant server to start on boot
  become: yes
  service:
    name: supergiant
    enabled: yes
  when: supergiant_configure_systemctl
