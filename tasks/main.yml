---

- name: validate mandatory variables
  set_fact:
    _validated: "{{ item | mandatory }}"
  with_items:
    - "{{ supergiant_admin_user_username }}"
    - "{{ supergiant_admin_user_password }}"

- name: install apt pre-requisites
  become: yes
  apt:
    name: ca-certificates
    state: present
    update_cache: yes
    cache_valid_time: "{{ supergiant_cache_valid_time }}"

- name: create directories used in install locations
  become: yes
  file:
    path: "{{ item | dirname }}"
    state: directory
  with_items:
    - "{{ supergiant_server_install_location }}"
    - "{{ supergiant_server_config_location }}"
    - "{{ supergiant_server_database_location }}"
    - "{{ supergiant_server_log_location }}"
    - "{{ supergiant_server_version_location }}"

- name: touch server version location to ensure that it exists
  become: yes
  file:
    path: "{{ supergiant_server_version_location }}"
    state: touch

- name: check version of Supergiant already installed
  become: yes
  slurp:
    src: "{{ supergiant_server_version_location }}"
  register: server_version

- name: install Supergiant
  when: server_version.content | b64decode != supergiant_version
  block:
    - name: check if release exists for Supergiant version
      uri:
        url: "{{ supergiant_server_release_location }}"
        follow_redirects: all
        method: HEAD
        status_code: 200, 404
      register: release_check_results
      changed_when: false

    - name: set release check results
      set_fact:
        released: "{{release_check_results.status == 200 }}"

    - name: install Supergiant from downloaded release
      become: yes
      get_url:
        url: "{{ supergiant_server_release_location }}"
        dest: "{{ supergiant_server_install_location }}"
        mode: 0770
        checksum: "{{ supergiant_server_release_checksum }}"
      notify: restart-supergiant
      when: released

    - name: install Supergiant from build
      import_tasks: build-and-install.yml
      when: not released

    - name: record installed version of Supergiant
      become: yes
      copy:
        content: "{{ supergiant_version }}"
        dest: "{{ supergiant_server_version_location }}"

- name: create server configuration file
  become: yes
  template:
    src: config.json.j2
    dest: "{{ supergiant_server_config_location }}"
    mode: 0644
  notify: restart-supergiant

- name: create systemd configuration
  become: yes
  template:
    src: supergiant.service.j2
    dest: /etc/systemd/system/supergiant.service
    mode: 0751
  notify: restart-supergiant
  when: supergiant_configure_systemctl

- name: enable Supergiant server to start on boot
  become: yes
  service:
    name: supergiant
    enabled: yes
  when: supergiant_configure_systemctl
